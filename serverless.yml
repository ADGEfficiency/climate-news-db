service: climatedb
frameworkVersion: "3"
configValidationMode: error

custom:
  name: ${self:service}-${opt:stage}
  account: ${param:account}

provider:
  name: aws
  runtime: python3.8
  region: ap-southeast-2

  environment:
    DB_URI: sqlite:////var/task/data-neu/db.sqlite

  timeout: 900

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:*'
          Resource:
            - '*'
        - Effect: 'Allow'
          Action:
            - 'logs:*'
          Resource:
            - 'arn:aws:logs:*:*:*'
        - Effect: 'Allow'
          Action:
            - 'ec2:Start*'
            - 'ec2:Stop*'
          Resource:
            - '*'

resources:
  Resources:
    bucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:service}-${opt:stage}

    ecr:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: ${self:custom.name}

functions:
  search:
    image:
      uri: ${self:custom.account}.dkr.ecr.ap-southeast-2.amazonaws.com/${self:custom.name}:latest
      command:
      - climatedb.lambda.search.handlers.search_controller
    events:
      - schedule:
          name: daily-search
          rate: cron(0 0 * * ? *)
          input:
            s3_bucket: climatedb-dev
            s3_key: data-neu/urls.jsonl

  scrape:
    image:
      uri: ${self:custom.account}.dkr.ecr.ap-southeast-2.amazonaws.com/${self:custom.name}:latest
      command:
      - climatedb.lambda.scrape.handlers.scrape_controller
    events:
      - schedule:
          name: daily-scrape
          rate: cron(0 3 * * ? *)
